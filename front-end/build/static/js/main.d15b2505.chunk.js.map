{"version":3,"sources":["components/Layout/Header.tsx","components/Layout/Footer.tsx","components/Layout/index.tsx","routes/index.tsx","pages/home/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Footer","Layout","headerShown","footerShown","classNames","children","className","mainTitle","routes","path","name","title","component","getRoutes","routeList","list","route","push","AppRoutes","map","exact","Component","rest","Helmet","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2OAEeA,EAFA,kBAAM,yBCENC,EAFA,kBAAM,yBCyBNC,EAfiB,SAAC,GAK1B,IAAD,IAJJC,mBAII,aAHJC,mBAGI,aAFJC,kBAEI,MAFS,GAET,EADJC,EACI,EADJA,SAEA,OACE,gCACGH,GAAe,cAAC,EAAD,IAChB,qBAAKI,UAAWF,EAAhB,SAA6BC,IAC5BF,GAAe,cAAC,EAAD,Q,8CCbhBI,EAAY,kBAULC,EAAwB,CACnC,CACEC,KAAM,IACNC,KAAM,OACNC,MAAO,OACPC,UCtBS,WACX,OAAO,qBAAKN,UAAU,6BAAf,qBDyBHO,EAAY,SAAZA,EAAaC,GACjB,IAD6D,EACvDC,EAAO,GADgD,cAGzCD,GAHyC,IAG7D,2BAA+B,CAAC,IAArBE,EAAoB,QAC7BD,EAAKE,KAAK,CACRP,KAAMM,EAAMN,KACZC,MAAOK,EAAML,MACbF,KAAMO,EAAMP,KACZG,UAAWI,EAAMJ,YAGfI,EAAMX,UACRU,EAAKE,KAAL,MAAAF,EAAI,YAASF,EAAUG,EAAMX,aAZ4B,8BAgB7D,OAAOU,GA4BMG,EAzBa,kBAC1B,cAAC,IAAD,UACGL,EAAUL,GAAQW,KACjB,gBACEV,EADF,EACEA,KACAC,EAFF,EAEEA,KACAC,EAHF,EAGEA,MACAS,EAJF,EAIEA,MACWC,EALb,EAKET,UACGU,EANL,wBAQED,GACE,eAAC,IAAD,yBAAkBZ,KAAMA,EAAMW,OAAiB,IAAVA,GAAqBE,GAA1D,cACE,cAACC,EAAA,EAAD,UACE,gCAAQZ,EAAK,UAAMA,EAAN,cAAiBJ,GAAcA,MAE9C,cAAC,EAAD,CAAQL,aAAa,EAArB,SACE,cAACmB,EAAD,SALQX,SE5CPc,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,SCOOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d15b2505.chunk.js","sourcesContent":["const Header = () => <div></div>;\n\nexport default Header;\n","const Footer = () => <div></div>;\n\nexport default Footer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ntype Props = {\n  headerShown?: boolean;\n  footerShown?: boolean;\n  classNames?: string;\n};\n\nconst Layout: React.FC<Props> = ({\n  headerShown = true,\n  footerShown = true,\n  classNames = \"\",\n  children,\n}) => {\n  return (\n    <div>\n      {headerShown && <Header />}\n      <div className={classNames}>{children}</div>\n      {footerShown && <Footer />}\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Switch } from \"react-router\";\nimport { Route, RouteProps } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Layout from \"components/Layout\";\nimport Home from \"pages/home\";\n\nconst mainTitle = \"Kingdom Karnage\";\n\nexport interface RouterProps extends RouteProps {\n  path: string;\n  name: string;\n  title: string;\n  component?: React.FC;\n  children?: RouterProps[];\n}\n\nexport const routes: RouterProps[] = [\n  {\n    path: \"/\",\n    name: \"home\",\n    title: \"Home\",\n    component: Home,\n  },\n];\n\nconst getRoutes = (routeList: RouterProps[]): RouterProps[] => {\n  const list = [];\n\n  for (const route of routeList) {\n    list.push({\n      name: route.name,\n      title: route.title,\n      path: route.path,\n      component: route.component,\n    });\n\n    if (route.children) {\n      list.push(...getRoutes(route.children));\n    }\n  }\n\n  return list;\n};\n\nconst AppRoutes: React.FC = () => (\n  <Switch>\n    {getRoutes(routes).map(\n      ({\n        path,\n        name,\n        title,\n        exact,\n        component: Component,\n        ...rest\n      }: RouterProps) =>\n        Component && (\n          <Route key={name} path={path} exact={exact !== false} {...rest}>\n            <Helmet>\n              <title>{title ? `${title} | ${mainTitle}` : mainTitle}</title>\n            </Helmet>\n            <Layout headerShown={true}>\n              <Component />\n            </Layout>\n          </Route>\n        )\n    )}\n  </Switch>\n);\n\nexport default AppRoutes;\n","const Home = () => {\n  return <div className=\"container mx-auto relative\">Home</div>;\n};\n\nexport default Home;\n","import { BrowserRouter, Route } from \"react-router-dom\";\nimport AppRoutes from \"./routes\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Route>\n        <AppRoutes />\n      </Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}